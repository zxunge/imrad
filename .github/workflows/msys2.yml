# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: msys2

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        platform: [windows-latest] #  self-hosted
        sys: [ mingw32 ] #  clangarm64

    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.platform}}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
          
    - uses: msys2/setup-msys2@v2
      if: ${{ matrix.sys == 'mingw32' }}
      with:
        msystem: ${{matrix.sys}}
        release: true
        location: D:\
        pacboy: >-
          cmake:p
          gcc:p
          ninja:p
          zip:p

    #- name: Configure CMake
    #  shell: msys2 {0}
    #  # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
    #  # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
    #  run: cmake -B build_${{matrix.sys}}_${{env.BUILD_TYPE}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=/opt/imrad

    - name: Build
      shell: msys2 {0}
      # Build your program with the given configuration
      run: ./release-linux 0.8

   # - name: Test
   #   shell: msys2 {0}
   #   working-directory: build_${{matrix.sys}}_${{env.BUILD_TYPE}}
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
   #   run: ctest -C ${{env.BUILD_TYPE}}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ImRAD
        path: install
